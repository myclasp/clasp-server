<header class="group-header bg-color-3">
  <div class="container-fluid">
    <h1>
    <%= @group.name %> / <%= pluralize @group.memberships.count, "member" %>
    <%= link_to '(Edit)', edit_group_path(@group) if @group.is_admin?(current_user) %>
    </h1>
  </div>
</header>
  
<section id="visualisations"  class="group">
 
  <nav class="row">
    <div class="container-fluid">
      <ul class="nav navbar-nav" style=""> 
        <li><%= link_to 'Map', '#map' %></li>
        <li><%= link_to 'Hour', '#hour' %></li>
        <li><%= link_to 'Week', '#week' %></li>
        <li><%= link_to 'Month', '#month' %></li>
      </ul>
      <ul id="" class="nav navbar-nav pull-right" style=""> 
        <li><a href="">Next</a></li>
        <li><a href="">Previous</a></li>
      </ul>
    </div>
  </nav>
  
  <div class="container-fluid">
   <div class="row">
    <div class="col-md-2">
    <%= image_tag @group.image_url unless @group.image_url.blank? %>
    <p><%= @group.description%></p>
    </div>

    <div class="col-md-10">
     <section class="tab-panel">
      <header class="vis-header">
      <h2 class="clear">Hour</h2>
      <%= button_to 'previous', '#', id: 'previous_day', method: :get, remote: true, data: {start: (@hourly_moments_start - 1.day).to_i, points: 24, interval: 'hour' } %>
      <%= button_to 'next', '#', id: 'next_day', method: :get, remote: true, data: {start: (@hourly_moments_start + 1.day).to_i, points: 24, interval: 'hour' } %>
      </header>
      <canvas id="hour" width="300" height="100"></canvas>
     </section>

     <section class="tab-panel">
      <header class="vis-header">
      <h2>Week</h2>
      <%= button_to 'previous', '#', id: 'previous_week', method: :get, remote: true, data: {start: (@week_moments_start - 1.week).to_i, points: 7, interval: 'day' } %>
      <%= button_to 'next', '#', id: 'next_week', method: :get, remote: true, data: {start: (@week_moments_start + 1.week).to_i, points: 7, interval: 'day' } %>
      </header>
      <canvas id="week" width="300" height="100"></canvas>
     </section>
     
     
     <section class="tab-panel">
      <header class="vis-header">
      <h2 class="clear">Month</h2>
      </header>
      <%= render partial: 'calendar', locals: { group: @group, calendar_moments: @calendar_moments } %>
     </section>


     <section class="tab-panel">
      <header class="vis-header">    
      <h2>Map</h2>
      <div class="clear" id='map'></div>
      </header>
     </section>
  
    </div>
    </div>

</section>

<%= content_for :script do %>
  //HOUR LINE

  function generateData(points){
    var d = [];
    for (i=0; i<points; i++){
      d.push( (Math.floor(Math.random() * 201) - 100));
    }
    return d;
  };

  function prepForGraph(data, key){
    var d = [];

    data.forEach(function(point, i){
      d.push(point[key].ratio * 100);
    });

    return d;
  };

  var hourlyData = <%= @hourly_moments.to_json.html_safe %>;

  var hour_datasets = [
    { label: 'Up/Down Ratio', fill: false, backgroundColor: "orange", borderColor: "silver", data: prepForGraph(hourlyData, 'group'), lineTension: 0.2 }
  ];

  <% if user_signed_in? %>
    hour_datasets.push({ label: 'My Ratio', fill: false, backgroundColor: "orange", 
      borderColor: "silver", data: prepForGraph(hourlyData, 'user'), 
      borderDash: [10.0, 10.0], borderDashOffset: 1.0, lineTension: 0.2
    });
  <% end %>

  <% hours = []; 24.times { |x| hours << (@week_moments_start + x.hour).strftime("%k") + "-" +
      (@week_moments_start + (x+1).hour).strftime("%k") } %>

  var labels = <%= hours.to_s.html_safe %>;

  var hourCanvas = document.getElementById("hour");
  var hourChart = new Chart(hourCanvas, {
    type: 'line',
    data: { labels: labels, datasets: hour_datasets },
    options: {
      scales: { 
        xAxes: [{ position: 'bottom' }],
        yAxes: [{ ticks: { max: 100, min: -100 } }]
      }
    }
  });

  //console.log(hourChart.chart.controller);
  //hourChart.chart.controller.boxes[2] //xaxis
  //hourChart.chart.controller.boxes[3] //xaxis
  //hourChart.render(1000, false)

  // WEEK LINE

  var weekData = <%= @week_moments.to_json.html_safe %>;

  var week_datasets = [
    { label: 'Up/Down Ratio', fill: false, backgroundColor: "orange", borderColor: "silver", data: prepForGraph(weekData, 'group'), lineTension: 0.2 }
  ];

  <% if user_signed_in? %>
    week_datasets.push({ label: 'My Up/Down Ratio', fill: false, backgroundColor: "orange", 
      borderColor: "silver", data: prepForGraph(weekData, 'user'), 
      borderDash: [10.0, 10.0], borderDashOffset: 1.0, lineTension: 0.2
    });
  <% end %>
    
  <% days = []
  7.times { |x| days << (@week_moments_start + x.day).strftime("%a") }; %>
  var labels = <%= days.to_s.html_safe %>;

  var weekCanvas = document.getElementById("week");
  
  var weekChart = new Chart(weekCanvas, {
    type: 'line',
    data: { labels: labels,  datasets: week_datasets },
    options: {
      scales: {
        xAxes: [{ position: 'bottom' }],
        yAxes: [{ ticks: { max: 100, min: -100 } }]
      }
    }
  });

  var buildNextPrevUrl = function(e){
    var url = '<%= group_period_moments_url(@group) %>';
    var interval = $(e).attr('data-interval');
    var start    = $(e).attr('data-start');
    var points   = $(e).attr('data-points');
    url = url + '?start=' + start + '&points=' + points + '&interval=' + interval;
    return url;
  };


  $('#next_day, #previous_day').click(function(e){
  
    var url = buildNextPrevUrl(e.currentTarget);
    $('#next_day, #previous_day').prop('disabled', true);

    jQuery.getJSON(url, function(result) { 
      
      $('#next_day').attr('data-start', result.next_start);
      $('#previous_day').attr('data-start', result.previous_start);
      $('#next_day, #previous_day').prop('disabled', false);
      
      hourChart.data.datasets[0].data = prepForGraph(result.data, 'group');
      if (result.data[0].user.ratio != undefined){ 
        hourChart.data.datasets[1].data = prepForGraph(result.data, 'user');
      }

      hourChart.update(); 
    });
  });

  $('#next_week, #previous_week').click(function(e){
    var url = buildNextPrevUrl(e.currentTarget);
    $('#next_week, #previous_week').prop('disabled', true);

    jQuery.getJSON(url, function(result) { 
      
      $('#next_week').attr('data-start', result.next_start);
      $('#previous_week').attr('data-start', result.previous_start);
      $('#next_week, #previous_week').prop('disabled', false);

      weekChart.data.datasets[0].data = prepForGraph(result.data, 'group');
      if (result.data[0].user.ratio != undefined){ 
        weekChart.data.datasets[1].data = prepForGraph(result.data, 'user');
      }

      weekChart.update(); 
    });
  });


  //MAP
  var map = L.map('map');
  map.setView([54.04354, -2.78502], 15);

  L.tileLayer('http://a.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18, subdomains: '', }).addTo(map);

  var normalIcon = L.icon({
    iconUrl: '<%= asset_path('marker-icon.png') %>',
    iconSize: [25, 41],
    iconAnchor: [12, 41],
    popupAnchor: [1, -27],
    shadowUrl: '<%= asset_path('marker-shadow.png') %>',
    shadowSize: [41, 41],
    shadowAnchor: [13, 41]
  });

  var markers = L.markerClusterGroup({ spiderfyOnMaxZoom: false, disableClusteringAtZoom: 16 });  
  var str = '';
  var marker;
  var opts = { latlng:[], color: "orange", fillColor: 'white', fillOpacity: 1, weight: 4 };

  var MomentCircle = L.Circle.extend({ options: { latlng: [] } });

  <% for marker in @markers %>
    opts.latlng = <%= marker[:latlng] %>;
    if (<%= marker[:state] %>){ opts.color = "orange"; } else { opts.color = "blue"; }
    if (<%= marker[:is_mine] %>){ opts.fillColor = "white"; } else { opts.fillColor = opts.color; }
    marker = new MomentCircle(<%= marker[:latlng] %>, 5, opts);
    marker.on('click', (e) => { console.log(e); });
    marker.bindPopup('<%= escape_javascript(render partial: "popup", locals: { marker: marker }) %>'); 
    markers.addLayer(marker);
  <% end %>
  
  map.addLayer(markers);
  map.on('popupopen', (e) => { console.log(e);  MomentMap.watchMapPopups(); });


<% end %>