<div class="group">

  <h1>
  <%= @group.name %> / <%= pluralize @group.memberships.count, "member" %>
  <%= link_to '(Edit)', edit_group_path(@group) if @group.is_admin?(current_user) %>
  </h1>

  <div class="row">
    <div class="col-md-6">
    <p><%= @group.description%></p>
    </div>

    <div class="col-md-6">
    <%= image_tag @group.image_url unless @group.image_url.blank? %>
    </div>
  </div>
  
  <nav>
    <ul class="nav navbar-nav" style=""> 
      <li><%= link_to 'Map', '#map' %></li>
      <li><%= link_to 'Hour', '#hour' %></li>
      <li><%= link_to 'Week', '#week' %></li>
      <li><%= link_to 'Month', '#month' %></li>
      <li><%= link_to 'Last 5 days', '#5days' %></li>
    </ul>
  </nav>

  <h2 class="clear">Hour</h2>
  <canvas id="hour" width="300" height="100"></canvas>

  <h2>Week</h2>
  <canvas id="week" width="300" height="100"></canvas>

  <h2 class="clear">Month</h2>
  <div id="month" class="" style="height:400px; width:90%; background-color:gray;">
  </div>

  <h2 class="clear">Last 5 Days</h2>
  <canvas id="5days" width="300" height="100"></canvas>

  <h2>Map</h2>
  <div class="clear" id='map'></div>

</div>

<%= content_for :script do %>
  //HOUR LINE

  function generateData(points, baseline){
    if (baseline==undefined){ baseline=15 }

    var d = [];
    for (i=0; i<points; i++){
      d.push({ x: i, y: Math.round(Math.random()*10)+baseline });
    }
    return d;
  };

  var hour_datasets = [
    { label: 'Ups', fill: false, backgroundColor: "orange", borderColor: "orange", data: generateData(24) },
    
    { label: 'Downs', fill: false, backgroundColor: "blue", borderColor: "blue",
      data: generateData(24),
    }
  ];

  <% if user_signed_in? %>
    hour_datasets.push({ label: 'My Ups', fill: false, backgroundColor: "orange", 
      borderColor: "orange", data: generateData(24,0), 
      borderDash: [10.0, 10.0], borderDashOffset: 1.0
    })

    hour_datasets.push({ label: 'My downs', fill: false, backgroundColor: "blue", borderColor: "blue", data: generateData(24,0),
      borderDash: [10.0, 10.0], borderDashOffset: 1.0
    });
  <% end %>

  var hourCanvas = document.getElementById("hour");
  var scatterChart = new Chart(hourCanvas, {
    type: 'line',
    data: { datasets: hour_datasets },
    options: {
      scales: {
        xAxes: [{
          type: 'linear',
          position: 'bottom'
        }]
      }
    }
  });


  // WEEK LINE
  var week_datasets = [
    { label: 'Ups', fill: false, backgroundColor: "orange", 
      borderColor: "orange", data: generateData(7) },
    
    { label: 'Downs', fill: false, backgroundColor: "blue", borderColor: "blue",
      data: generateData(7),
    }
  ];

  <% if user_signed_in? %>
    week_datasets.push({ label: 'My Ups', fill: false, backgroundColor: "orange", 
      borderColor: "orange", data: generateData(7,0), 
      borderDash: [10.0, 10.0], borderDashOffset: 1.0
    })

    week_datasets.push({ label: 'My downs', fill: false, backgroundColor: "blue", borderColor: "blue", data: generateData(7,0), borderDash: [10.0, 10.0], borderDashOffset: 1.0
    });
  <% end %>
  
  var weekCanvas = document.getElementById("week");
  var scatterChart = new Chart(weekCanvas, {
    type: 'line',
    data: { datasets: week_datasets },
    options: {
      scales: {
        xAxes: [{
          type: 'linear',
          position: 'bottom'
        }]
      }
    }
  });


  //5DAY
  var data = {
    labels : ["Monday","Tuesday","Wednesday","Thursday","Friday"],
    datasets : [
      { 
        label: "up",
        backgroundColor: "orange", borderColor: "orange",
        data : [65,59,90,81,56,55,40]
      },
      {
        label: "down",
        backgroundColor: "blue", borderColor: "blue",
        data : [-68,-48,-40,-59,-100,-127,-100]
      }
    ]
  }

  var ctx = document.getElementById("5days").getContext("2d");
  var myNewChart = new Chart(ctx, { type:'bar', data: data, 
  options: { animation : false,
    scales: { xAxes: [{ stacked: true }], yAxes: [{ stacked: true }] } } });



  //MAP
  var map = L.map('map');
  map.setView([54.04354, -2.78502], 15);

  L.tileLayer('http://a.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18, subdomains: '', }).addTo(map);

  var normalIcon = L.icon({
    iconUrl: '<%= asset_path('marker-icon.png') %>',
    iconSize: [25, 41],
    iconAnchor: [12, 41],
    popupAnchor: [1, -27],
    shadowUrl: '<%= asset_path('marker-shadow.png') %>',
    shadowSize: [41, 41],
    shadowAnchor: [13, 41]
  });

  var markers = L.markerClusterGroup();  
  var str = '';
  var marker;
  var color = '';

  <% for marker in @markers %>
    //marker = L.marker(<%= marker[:latlng] %>, {icon: normalIcon});
    
    if (<%=marker[:state]%>){ color = "orange"; } else { color = "blue"; }
    marker = L.circle(<%= marker[:latlng] %>, 3, {color: color });
    marker.bindPopup('<%= marker[:popup] %>'); 
    markers.addLayer(marker); 
  <% end %>
  
  map.addLayer(markers);

  /*var popup = L.popup();
  var x = 4;
  function onMapClick(e) {
    x++;
    popup.setLatLng(e.latlng).setContent("hello").openOn(map);
  }
  map.on('click', onMapClick);*/


<% end %>